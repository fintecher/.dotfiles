# System
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
[[ -s "$HOME/google-cloud-sdk" ]] && source "$HOME/google-cloud-sdk/path.zsh.inc" && source "$HOME/google-cloud-sdk/completion.zsh.inc"

## osx
alias hidden!="defaults write com.apple.finder AppleShowAllFiles TRUE && killall Finder"
alias hidden="defaults write com.apple.finder AppleShowAllFiles FALSE && killall Finder"

# helper aliases

alias zshconfig="vim ~/.zshrc.local"
alias ohmyzsh="vim ~/.oh-my-zsh"
alias dotfiles="cd ~/.dotfiles"

## Browsers

alias chrome="$HOME/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
alias safari="open -a Safari"
alias ff="open -a Firefox"

## Redis

alias redis-up="redis-server $DOTFILES/redis/redis.conf > /dev/null &"
alias redis-down='killall redis-server'

# Mongo

alias mongo-up="mongod &> /dev/null &"
alias mongo-down='killall mongod'

# Postgres

alias postgres-up="postgres -D /usr/local/var/postgres &> /dev/null &"
alias postgres-down="killall postgres"

# Fix GB
unalias gb

# Remove the hosts that I don't want to keep around- in this case, only
# keep the first host.
alias hosts="head -2 ~/.ssh/known_hosts | tail -1 > ~/.ssh/known_hosts"

# Pipe my public key to my clipboard.
alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"

# Exports
export HOMEBREW_CELLAR="/usr/local/Cellar"
export GO_APPENGINE=$HOME/go_appengine
export GOPATH=$HOME/gocode
export GOBINS=$GOPATH/bin
export ANDROID_SDK=/opt/android-sdk
export ANDROID_NDK=/opt/android-ndk
export ANDROID_HOME=$ANDROID_SDK
export NODE_ENV=development
export MANPATH="/usr/local/man:/usr/local/git/man:$MANPATH"

#cocoapods
export POD_PATH=`which pod`
export GEM_PATH="$HOME/.rvm/gems/`ls $HOME/.rvm/gems/ | tail -1`/bin"

# Boot2Docker
export DOCKER_HOST=tcp://192.168.59.103:2376
export DOCKER_CERT_PATH=$HOME/.boot2docker/certs/boot2docker-vm
export DOCKER_TLS_VERIFY=1

export PATH=$GOBINS:./bin:./.bin:$HOME/.bin:$HOME/bin:$PATH
export PATH=$PATH:/usr/local/sbin:$GO_APPENGINE:$ANDROID_SDK/platform-tools:$ANDROID_SDK/tools

# Functions

# Define Vim wrappers which unsets GEM_HOME and GEM_PATH before
# invoking vim and all known aliases
#
# @author Wael Nasreddine <wael.nasreddine@gmail.com>
function define_vim_wrappers() {
vim_commands=(
eview evim gview gvim gvimdiff gvimtutor rgview
rgvim rview rvim vim vimdiff vimtutor xxd mvim
)

for cmd in ${vim_commands[@]}; do
  cmd_path=`/usr/bin/env which -a "${cmd}" 2>/dev/null | grep '^/'`
  if [ -x "${cmd_path}" ]; then
    eval "function ${cmd} () { (unset GEM_HOME; unset GEM_PATH; $cmd_path \$@) }"
  fi
done
}
define_vim_wrappers

## Quick open dirs
p (){ cd ~/projects/$1; }
compctl -W $HOME/projects/ -/ p

mygo (){ cd $GOCODE/$1; }
compctl -W $GOCODE/ -/ mygo

tcase (){ cd ~/test_cases/$1; }
compctl -W $HOME/test_cases/ -/ tcase

code (){ cd ~/code/$1; }
compctl -W $HOME/code/ -/ code

exip () {
  # gather external ip address
  echo -n "Current External IP: "
  curl -s -m 5 http://myip.dk | grep "ha4" | sed -e 's/.*ha4">//g' -e 's/<\/span>.*//g'
}

ips () {
  # determine local IP address
  ifconfig | grep "inet " | awk '{ print $2 }'
}

killport () {
  # portslay:  kill the task active on the specified TCP port
  kill -9 `lsof -i tcp:$1 | tail -1 | awk '{ print $2;}'`
}

extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)        tar xjf $1        ;;
      *.tar.gz)         tar xzf $1        ;;
      *.bz2)            bunzip2 $1        ;;
      *.rar)            unrar x $1        ;;
      *.gz)             gunzip $1         ;;
      *.tar)            tar xf $1         ;;
      *.tbz2)           tar xjf $1        ;;
      *.tgz)            tar xzf $1        ;;
      *.zip)            unzip $1          ;;
      *.Z)              uncompress $1     ;;
      *)                echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
## Launch Chrome in App mode
chrome (){
  /Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary \
    --force-app-mode \
    --enable-crxless-web-apps \
    --user-data-dir=$TMPDIR \
    --app=$1
}

[[ -s "$HOME/.zshrc.local" ]] && source "$HOME/.zshrc.local"

