
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" File Utils
Plugin 'scrooloose/nerdtree'
Plugin 'kien/ctrlp.vim'

" Syntax highlight
Plugin 'scrooloose/syntastic'
Plugin 'sheerun/vim-polyglot'
Plugin 'yamaya/vim-swift'
Plugin 'mxw/vim-jsx'

" GUI
Plugin 'bling/vim-airline'
Plugin 'chriskempson/base16-vim'
Plugin 'bufkill.vim'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'nathanaelkane/vim-indent-guides'

" Git integration
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'

" Source Utils
Plugin 'Valloric/YouCompleteMe'
Plugin 'SirVer/ultisnips'
Plugin 'majutsushi/tagbar'
Plugin 'scrooloose/nerdcommenter'
Plugin 'rking/ag.vim'
Plugin 'marijnh/tern_for_vim'
Plugin 'fatih/vim-go'

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

" All of your Plugins must be added before the following line
call vundle#end()
filetype plugin indent on

" ----------------------------------------- "
" Plugin configs 			    			            "
" ----------------------------------------- "

" ==================== Color Schema =================
colorscheme base16-eighties

" ==================== Indent Guides ================
set ts=2 sw=2 et

" ==================== UltiSnips ====================
let g:UltiSnipsExpandTrigger="<c-b>"
"au CompleteDone * pclose

" ==================== BuffKill ====================
nnoremap <leader>q :call CloseSplitOrDeleteBuffer()<CR>

" ==================== VimAirline ====================
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1

" ==================== Tagbar ====================
nnoremap <C-b> :TagbarToggle<CR>

" ==================== Syntastic ====================
let g:syntastic_javascript_checkers = ['eslint']
let g:jsx_ext_required = 0

" ==================== NERDTree ====================
" For toggling
noremap <Leader>n :NERDTreeToggle<cr>
" For refreshing current file and showing current dir
noremap <Leader>j :NERDTreeFind<cr>

" ==================== CtrlP ====================
let g:ctrlp_custom_ignore = '\v[\/](node_modules|build)|(\.(git|hg|svn))$'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_switch_buffer = 'et'	" jump to a file if it's open already
let g:ctrlp_mruf_max=450 		" number of recently opened files
let g:ctrlp_max_files=0  		" do not limit the number of searchable files

" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
"if executable('ag')
  " Use Ag over Grep
  "set grepprg=ag\ --nogroup\ --nocolor
  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  "let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
  " ag is fast enough that CtrlP doesn't need to cache
  "let g:ctrlp_use_caching = 0
"endif

" ==================== Vim Golang =====================
let g:go_fmt_command = "goimports"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <leader>t <Plug>(go-test)
au FileType go nmap <leader>c <Plug>(go-coverage)
au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)
au FileType go nmap <Leader>dt <Plug>(go-def-tab)
au FileType go nmap <Leader>gd <Plug>(go-doc)
au FileType go nmap <Leader>gv <Plug>(go-doc-vertical)
au FileType go nmap <Leader>gb <Plug>(go-doc-browser)
au FileType go nmap <Leader>s <Plug>(go-implements)
au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>e <Plug>(go-rename)

